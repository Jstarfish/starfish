<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="priv.starfish.mall.dao.market.UserCouponDao">
	<resultMap id="UserCouponMap" type="priv.starfish.mall.market.entity.UserCoupon">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="refId" property="refId" jdbcType="INTEGER" />
		<result column="distActId" property="distActId" jdbcType="INTEGER" />
		<result column="no" property="no" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="productId" property="productId" jdbcType="BIGINT" />
		<result column="price" property="price" jdbcType="DECIMAL" />
		<result column="settlePrice" property="settlePrice" jdbcType="DECIMAL" />
		<result column="userId" property="userId" jdbcType="INTEGER" />
		<result column="checkCode" property="checkCode" jdbcType="VARCHAR" />
		<result column="obtainTime" property="obtainTime" jdbcType="TIMESTAMP" />
		<result column="startTime" property="startTime" jdbcType="TIMESTAMP" />
		<result column="endTime" property="endTime" jdbcType="TIMESTAMP" />
		<result column="invalid" property="invalid" jdbcType="BOOLEAN" />
		<result column="orderId" property="orderId" jdbcType="BIGINT" />
		<result column="ts" property="ts" jdbcType="TIMESTAMP" />
		<result column="deleted" property="deleted" jdbcType="BOOLEAN" />
	</resultMap>
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		UC.id, UC.refId, UC.distActId, UC.shopId, UC.no, UC.type, UC.name, UC.title,
		UC.productId, UC.price, UC.settlePrice, UC.userId, UC.checkCode,
		UC.obtainTime, UC.startTime, UC.endTime, UC.invalid, UC.orderId,
		UC.ts, UC.deleted
	</sql>

	<select id="selectById" resultMap="UserCouponMap" parameterType="Integer">
		SELECT
		<include refid="columns" />
		FROM user_coupon UC
		WHERE UC.id = #{id}
	</select>

	<select id="selectByIdAndUserId" resultMap="UserCouponMap"
		parameterType="map">
		SELECT
		<include refid="columns" />
		FROM user_coupon UC
		WHERE UC.id = #{id} AND UC.userId=#{userId}
	</select>

	<select id="selectByNo" resultMap="UserCouponMap">
		SELECT
		<include refid="columns" />
		FROM user_coupon UC
		WHERE UC.no = #{no}
	</select>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">INSERT
		INTO
		user_coupon(refId, distActId, no, type, name, title, productId,
		price, settlePrice,
		userId, checkCode, obtainTime, startTime, endTime,
		invalid, orderId,
		ts, deleted)
		VALUES(#{refId}, #{distActId}, #{no},
		#{type}, #{name}, #{title}, #{productId},
		#{price}, #{settlePrice},
		#{userId}, #{checkCode}, #{obtainTime},
		#{startTime}, #{endTime},
		#{invalid}, #{orderId}, #{ts}, #{deleted})
	</insert>

	<update id="update">
		UPDATE user_coupon
		<set>
			<trim suffixOverrides=",">
				<if test="refId != null">
					refId = #{refId},
				</if>
				<if test="distActId != null">
					distActId = #{distActId},
				</if>
				<if test="no != null">
					no = #{no},
				</if>
				<if test="type != null">
					type = #{type},
				</if>
				<if test="name != null">
					name = #{name},
				</if>
				<if test="title != null">
					title = #{title},
				</if>
				<if test="productId != null">
					productId = #{productId},
				</if>
				<if test="price != null">
					price = #{price},
				</if>
				<if test="settlePrice != null">
					settlePrice = #{settlePrice},
				</if>
				<if test="userId != null">
					userId = #{userId},
				</if>
				<if test="checkCode != null">
					checkCode = #{checkCode},
				</if>
				<if test="obtainTime != null">
					obtainTime = #{obtainTime},
				</if>
				<if test="startTime != null">
					startTime = #{startTime},
				</if>
				<if test="endTime != null">
					endTime = #{endTime},
				</if>
				<if test="invalid != null">
					invalid = #{invalid},
				</if>
				<if test="orderId != null">
					orderId = #{orderId},
				</if>
				<if test="ts != null">
					ts = #{ts},
				</if>
				<if test="deleted != null">
					deleted = #{deleted}
				</if>
			</trim>
		</set>
		WHERE id = #{id}
	</update>

	<delete id="deleteById" parameterType="Integer">DELETE
		FROM user_coupon
		WHERE id = #{id}
	</delete>

	<delete id="updateForDelete">
		UPDATE user_coupon
		SET deleted = #{deleted}
		WHERE id =
		#{id} AND userId=#{userId}
	</delete>

	<select id="selectByFilter" resultMap="UserCouponMap">
		SELECT
		<include refid="columns" />
		FROM user_coupon UC
		WHERE
		UC.userId=#{userId} AND
		UC.deleted=false
		<if test="couponState == null or couponState == ''">
			AND UC.invalid=false
		</if>
		<if test="couponState != null and couponState != ''">
			<choose>
				<when test="couponState == 'unused'">
					AND UC.invalid=false
				</when>
				<when test="couponState == 'invalid'">
					AND UC.invalid = true AND (UC.orderId is NULL OR
					UC.orderId='')
				</when>
				<when test="couponState == 'finished'">
					AND (UC.orderId is NOT NULL OR UC.orderId !='')
				</when>
				<otherwise>
				</otherwise>
			</choose>
		</if>
		<if test="couponType != null and couponType != ''">
			AND UC.type=#{couponType}
		</if>
		ORDER BY UC.ts desc
	</select>

	<select id="selectCountByUserId" resultType="Integer">
		SELECT
		count(*)
		FROM
		user_coupon UCP
		WHERE UCP.userId=#{userId}
		AND UCP.invalid=false AND
		UCP.deleted=false
		AND (UCP.orderId is NULL OR UCP.orderId='')
	</select>

	<select id="selectByProductId" resultMap="UserCouponMap">
		SELECT
		<include refid="columns" />
		FROM user_coupon UC
		WHERE
		UC.userId=#{userId} AND
		UC.productId=#{productId}
		AND UC.invalid=false AND UC.deleted=false
		AND
		(UC.orderId is NULL OR UC.orderId='') order by UC.ts desc
	</select>

	<select id="selectByOrderId" resultMap="UserCouponMap">
		SELECT
		<include refid="columns" />
		FROM user_coupon UC
		WHERE UC.orderId = #{orderId}
	</select>
</mapper>
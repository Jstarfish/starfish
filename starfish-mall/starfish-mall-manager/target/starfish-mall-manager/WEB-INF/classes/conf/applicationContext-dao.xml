<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<!-- 数据库连接池 -->
	<!-- 加载配置文件 -->
	<!--<context:property-placeholder location="classpath:conf/*.properties" />-->

	<!-- 数据库连接池 -->
	<!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="maxActive" value="10" />
		<property name="minIdle" value="5" />
	</bean>-->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driverClass}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="10" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="maxOpenPreparedStatements" value="30" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
	</bean>


	<!-- 主库数据源 -->
	<!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		  destroy-method="close">
	&lt;!&ndash; 基本属性 url、user、password &ndash;&gt;
	<property name="driverClassName" value="${master.jdbc.driver}"/>
	<property name="url" value="${master.jdbc.url}"/>
	<property name="username" value="${master.jdbc.username}"/>
	<property name="password" value="${master.jdbc.password}"/>
	&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;
	<property name="initialSize" value="1"/>
	<property name="minIdle" value="1"/>
	<property name="maxActive" value="20"/>
	&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;
	<property name="maxWait" value="60000"/>
	&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;
	<property name="timeBetweenEvictionRunsMillis" value="60000"/>
	&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;
	<property name="minEvictableIdleTimeMillis" value="300000"/>
	&lt;!&ndash; 校验语句 &ndash;&gt;
	<property name="validationQuery" value="SELECT 1"/>
	<property name="testWhileIdle" value="true"/>
	<property name="testOnBorrow" value="false"/>
	<property name="testOnReturn" value="false"/>
	&lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;
	<property name="filters" value="stat"/>
	</bean>-->
<!--
	&lt;!&ndash; 配置sqlsessionFactory &ndash;&gt;
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:conf/SqlMapConfig.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
		&lt;!&ndash; 当mybatis的xml文件和mapper接口不在相同包下时，需要用mapperLocations属性指定xml文件的路径。
         *是个通配符，代表所有的文件，**代表所有目录下 &ndash;&gt;
		<property name="mapperLocations" value="classpath:priv/starfish/mall/manager/mapper/*.xml" />
	</bean>

	&lt;!&ndash; 配置扫描包，加载mapper代理对象 扫描的是dao，不是mapper &ndash;&gt;
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="priv.starfish.mall.manager.dao"></property>
	</bean>-->


	<!-- ezmall 配置-->
	<context:component-scan base-package="priv.starfish.mall.dao.**" />

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:conf/SqlMapConfig.xml" />
		<property name="mapperLocations" value="classpath*:priv/starfish/mall/dao/**/xml/*.xml" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

</beans>